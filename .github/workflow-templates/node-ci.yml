name: Node.js CI

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - '**/*.js'
      - '**/*.ts'
      - '**/*.jsx'
      - '**/*.tsx'
      - 'package*.json'
      - 'yarn.lock'
      - 'pnpm-lock.yaml'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - '**/*.js'
      - '**/*.ts'
      - '**/*.jsx'
      - '**/*.tsx'
      - 'package*.json'
      - 'yarn.lock'
      - 'pnpm-lock.yaml'
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: Real-AI-Engineering/vibe-pipeline/.github/actions/setup-node@main
        with:
          node-version: ${{ env.NODE_VERSION }}
          install-dev-deps: 'true'

      - name: Run ESLint
        run: |
          npx eslint . --ext .js,.jsx,.ts,.tsx --format=github

      - name: Run Prettier check
        run: |
          npx prettier --check "**/*.{js,jsx,ts,tsx,json,css,md}"

      - name: TypeScript type check
        run: |
          if [ -f "tsconfig.json" ]; then
            npx tsc --noEmit
          else
            echo "No TypeScript configuration found, skipping type check"
          fi

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: Real-AI-Engineering/vibe-pipeline/.github/actions/setup-node@main
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate || echo "npm audit completed with findings"

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --file=package.json

  test:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18', '20', '22']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: Real-AI-Engineering/vibe-pipeline/.github/actions/setup-node@main
        with:
          node-version: ${{ matrix.node-version }}
          install-dev-deps: 'true'

      - name: Run tests
        run: |
          # Try different test runners
          if npm run test --if-present; then
            echo "Tests completed via npm run test"
          elif npx jest --version >/dev/null 2>&1; then
            npx jest --coverage --coverageReporters=text --coverageReporters=cobertura
          elif npx vitest --version >/dev/null 2>&1; then
            npx vitest run --coverage
          else
            echo "No test runner found"
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            coverage/
            test-results.xml

      - name: Upload coverage to Codecov
        if: matrix.node-version == env.NODE_VERSION
        uses: codecov/codecov-action@v4
        with:
          directory: ./coverage/
          flags: unittests
          name: codecov-umbrella

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, security, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: Real-AI-Engineering/vibe-pipeline/.github/actions/setup-node@main
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build project
        run: |
          # Try different build commands
          if npm run build --if-present; then
            echo "Build completed via npm run build"
          elif [ -f "tsconfig.json" ]; then
            npx tsc
          else
            echo "No build script found, skipping build"
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-artifacts
          path: |
            dist/
            build/
            out/
            .next/
            public/build/